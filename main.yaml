---
- hosts: all
  become: true
  vars:
    registry: 'agapochkina/private_registry'
    dockerhub_token: !vault |
        $ANSIBLE_VAULT;1.1;AES256
        31373039656363376130613637616132633934656166643161313164383961626133366461366238
        3365643133653061333338653933336265636139313864300a346633303234633161656333393832
        36643535343131366338656562363738393264636363653838316534663530333537633231623130
        6330666362663739330a333236353562346631336234393330626534666330663561303831623730
        63323736656464613636383237363863316434623532633063326532633339303536363330363363
        3130633837333662666439356634356233656132666434393132

  tasks:
    - name: Login in hub
      shell: docker login -u agapochkina -p {{ dockerhub_token }}

    - name: Pull image
      shell: docker pull {{ registry }}:{{ tag }}
      
    - name: Create unit file
      template:
        src: systemd-unit.j2
        dest: /etc/systemd/system/docker-{{ container_name }}.service
        owner: root
        group: root
        mode: 0644
      register: create_unit_file

    - name: Create env directory
      file:
        path: /opt/container_envs
        state: directory

    - name: Create env file
      template:
        src: "{{ container_name }}.env.j2"
        dest: /opt/container_envs/{{ container_name }}.env
        owner: root
        group: root
        mode: 0644
      register: create_env_file

    - name: Daemon reload
      systemd:
        daemon_reload: yes
      when: create_env_file.changed

    - name: Stop container
      systemd:
        name: docker-{{ container_name }}.service
        state: stopped

    - name: Enable unit
      systemd:
        name: docker-{{ container_name }}.service
        enabled: yes
      when: running

    - name: Start
      systemd:
        name: docker-{{ container_name }}.service
        state: started

    - name: Check is container really started
      command: systemctl is-active "docker-{{ container_name }}"